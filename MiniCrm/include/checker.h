#ifndef CHECKER_H
#define CHECKER_H

#include <cstddef>

/**
 * @brief Проверяет доступность файла clients.bin для работы.
 *
 * Выполняет попытку открыть файл в бинарном режиме чтения/записи.
 * Возвращает true, если файл доступен, иначе выводит сообщение об ошибке
 * (например, "Файл clients.bin не найден или недоступен") и возвращает false.
 *
 * @return true, если файл успешно открыт и доступен; false в противном случае.
 */
bool checkFileOpen();

/**
 * @brief Проверяет наличие данных в файле clients.bin.
 *
 * Определяет пустоту файла через проверку его размера.
 * если размер файла меньше sizeof(Client), считается пустым.
 * Выводит предупреждение "Файл пуст или содержит некорректные данные",
 * если файл не содержит валидных записей.
 *
 * @return true, если файл пуст или содержит поврежденные данные; false, если есть валидные записи.
 */
bool checkFileEmpty();

/**
 * @brief Валидация пользовательского выбора из меню.
 *
 * Проверяет ввод на соответствие целому числу в диапазоне [0-14].
 * Обрабатывает некорректные вводы и повторяет запрос при ошибке.
 *
 * @return short Выбранное пользователем число.
 */
short checkChoice();

/**
 * @brief Проверка корректности даты.
 *
 * Поддерживает форматы разделителей: . - / и пробелы. Проверяет:
 * - Существование даты
 * - Корректность дней для месяцев
 * - Високосные года для февраля
 * - Год в диапазоне [1-2025]
 *
 * @param data Строка с датой (модифицируется при проверке).
 * @return true Дата корректна.
 */
bool isValidDate(char *data);

/**
 * @brief Ввод и проверка положительного числа.
 *
 * Поддерживает типы int и double. Для double:
 * - Заменяет запятые на точки
 * - Проверяет корректность десятичного разделителя
 *
 * @tparam T Тип числа (int/double)
 * @return T Положительное число (>0)
 */
template <typename T>
T checkPositiveNum();

/**
 * @brief Проверка корректности телефонного номера.
 *
 * Требования:
 * - Начинается с '+' или цифр
 * - После '+' допускаются только цифры
 * - Максимальная длина: maxLength-1 символов
 *
 * @param output Буфер для сохранения номера (должен быть размера >=maxLength)
 * @param maxLength Максимально допустимая длина номера
 * @return true Всегда возвращает true (ошибки обрабатываются внутри)
 */
bool checkPhoneNum(char *output, int maxLength);

#endif